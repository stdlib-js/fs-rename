{"version":3,"file":"index.mjs","sources":["../lib/main.js","../lib/sync.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar native = require( 'fs' ).rename;\n\n\n// MAIN //\n\n/**\n* Asynchronously renames a file.\n*\n* @param {(string|Buffer)} oldPath - old path\n* @param {(string|Buffer)} newPath - new path\n* @param {Function} clbk - callback to invoke after renaming a path\n*\n* @example\n* function done( error ) {\n*     if ( error ) {\n*         throw error;\n*     }\n* }\n*\n* rename( './beep/boop.txt', './beep/foo.txt', done );\n*/\nfunction rename( oldPath, newPath, clbk ) {\n\tnative( oldPath, newPath, clbk );\n}\n\n\n// EXPORTS //\n\nmodule.exports = rename;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar rename = require( 'fs' ).renameSync; // eslint-disable-line node/no-sync\n\n\n// MAIN //\n\n/**\n* Synchronously renames a file.\n*\n* @param {(string|Buffer)} oldPath - old path\n* @param {(string|Buffer)} newPath - new path\n* @returns {(Error|null)} error object or null\n*\n* @example\n* var err = renameSync( './beep/boop.txt', './beep/foo.txt' );\n* if ( err instanceof Error ) {\n*     throw err;\n* }\n*/\nfunction renameSync( oldPath, newPath ) {\n\ttry {\n\t\trename( oldPath, newPath );\n\t} catch ( err ) {\n\t\treturn err;\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = renameSync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Rename a file.\n*\n* @module @stdlib/fs-rename\n*\n* @example\n* var rename = require( '@stdlib/fs-rename' );\n*\n* function done( error ) {\n*     if ( error ) {\n*         throw error;\n*     }\n* }\n*\n* rename( './beep/boop.txt', './beep/foo.txt', done );\n*\n* @example\n* var renameSync = require( '@stdlib/fs-rename' ).sync;\n*\n* var err = renameSync( './beep/boop.txt', './beep/foo.txt' );\n* if ( err instanceof Error ) {\n*     throw err;\n* }\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils-define-nonenumerable-read-only-property' );\nvar rename = require( './main.js' );\nvar sync = require( './sync.js' );\n\n\n// MAIN //\n\nsetReadOnly( rename, 'sync', sync );\n\n\n// EXPORTS //\n\nmodule.exports = rename;\n"],"names":["native","require$$0","rename","main","oldPath","newPath","clbk","renameSync","require$$1","sync","err","lib"],"mappings":";;8aAsBIA,EAASC,EAAgBC,OA4B7B,IAAAC,EAPA,SAAiBC,EAASC,EAASC,GAClCN,EAAQI,EAASC,EAASC,ICtBvBJ,EAASD,EAAgBM,WA8B7B,ICJAL,EAAAM,EACAC,EDTA,SAAqBL,EAASC,GAC7B,IACCH,EAAQE,EAASC,GAChB,MAAQK,GACT,OAAOA,EAER,OAAO,MCCRT,EAOAC,EAAA,OAAAO,GAKA,IAAAE,EAAAT"}